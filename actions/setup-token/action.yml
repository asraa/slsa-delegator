name: setup token

description: 'setup token'

inputs:
  slsa-workflow-recipient:
    description: 'the workflow filename that this token is intended for'
    type: string
    required: true

  slsa-private-repository:
    description: 'Set to true for private repositories.'
    type: boolean
    required: true

  slsa-runner-label:
    description: 'Runner label to use.'
    type: choice
    options: 
        - ubuntu-latest
    required: true

  slsa-build-artifacts-action-path:
    description: 'The action path to invoke. Example: ./actions/build-artifacts'
    type: string
    required: true

  slsa-workflow-inputs:
    description: 'The inputs to the tool reusable workflow'
    type: string
    required: true

outputs:
  slsa-token:
    description: "slsa token"
    value: ${{ steps.sign.outputs.slsa-signed-token }}

runs:
  using: 'composite'
  steps:
      - name: Checkout the builder
        # This pin must be added to the release freeze reference pre-submits.
        uses: laurentsimon/slsa-delegator/.github/actions/secure-checkout@main
        with:
          # These are always the same as the pin above.
          repository: ${{ github.action_repository }}
          ref: ${{ github.action_ref }}

      # TODO: pin
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      # TODO: uses: slsa-framework/... detect-env@pin with pin verified as code freeze
      - name: Detect the generator ref
        id: detect
        shell: bash
        run: |
          echo "repository=laurentsimon/slsa-delegated-tool" >> "$GITHUB_OUTPUT" 
          echo "ref=main" >> "$GITHUB_OUTPUT"
      
      - name: Debug
        shell: bash
        env:
          INPUTS: ${{ toJson(inputs) }}
          WORKFLOW_INPUTS: ${{ toJson(fromJson(inputs.slsa-workflow-inputs)) }}
        run: |
          echo "inputs=$INPUTS"
          echo "workflow-inputs=$WORKFLOW_INPUTS"

      # TODO: Action to create unsigned token
      - name: Generate unsigned token
        id: generate
        shell: bash
        working-directory: ./__BUILDER_CHECKOUT_DIR__/actions/setup-token
        env:
          ACTION_INPUTS: ${{ toJson(inputs) }}
          # Note: We need to pass the argument sepaately, because GitHub automatically stringifies the
          # argument and it contains `\n` and escape characters:
          # "slsa-workflow-inputs": "{\n  \"release-tag\": \"v100\",\n  \"name1\": \"value1\",\n  \"name2\": \"value2\",\n  \"private-repository\": true\n}"
          WORKFLOW_INPUTS: ${{ toJson(fromJson(inputs.slsa-workflow-inputs)) }}
          TOOL_REPOSITORY: ${{ steps.detect.outputs.repository }}
          TOOL_REF: ${{ steps.detect.outputs.ref }}
        run: ./dist/index.js
        
      - name: Debug
        shell: bash
        env:
          REPO: ${{ github.action_repository }}
          REF: ${{ github.action_ref }}
        run: |
          echo "repo: $REPO"
          echo "ref: $REF"

          pwd
          ls
          tree

          echo "token: ${{ steps.generate.outputs.base64-slsa-token }}"
          echo "recipient: ${{ inputs.slsa-workflow-recipient }}"

      - name: Sign the token
        id: sign
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/sign-token
        with:
          slsa-raw-token: ${{ steps.generate.outputs.base64-slsa-token }}

#     - name: Generate a token
#       id: generate
#       shell: bash
#       env:
#         SLSA_INPUTS: ${{ toJson(inputs.slsa-workflow-inputs) }}
#         SLSA_RUNNER_LABEL: ${{ inputs.slsa-runner-label }}
#         SLSA_PRIVATE_REPOSITORY: ${{ inputs.slsa-private-repository }}
#         SLSA_ACTION_PATH: ${{ inputs.slsa-build-artifacts-action-path }}
#         SLSA_RECIPIENT: ${{ inputs.slsa-workflow-recipient }}
#       run: |
#           # TODO: call the Action to generate and sign the token.
#           echo "inputs: $SLSA_INPUTS"
#           echo "runner: $SLSA_RUNNER_LABEL"
#           echo "private: $SLSA_PRIVATE_REPOSITORY"
#           echo "path: $SLSA_ACTION_PATH"
#           cat <<EOF >DATA
#           {
#             "version": 1,
#             "builder":{
#               "private-repository": true,
#               "runner-label": "ubuntu-latest"
#             },
#             "tool":{
#               "actions": {
#                 "build-artifacts":{
#                   "path": "./actions/build-artifacts-composite"
#                   }
#               },
#               "reusable-workflow":{
#                 "path": ".github/workflows/tool1_slsa3.yml",
#                 "repository": "laurentsimon/slsa-delegated-tool",
#                 "ref": "main"
#               },
#               "inputs":{
#                 "name1": "value1",
#                 "name2": "value2"
#               }
#             }
#           }
#           EOF
#           echo "token:"
#           cat DATA
#           cat DATA | base64 -w0
#           echo "slsa-token=$(cat DATA | base64 -w0)" >> "$GITHUB_OUTPUT"

